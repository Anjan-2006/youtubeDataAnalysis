<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css">
  <title> <%= id%> Total Subscribers Over Time</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css" integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<style>
  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    padding: 30px 0px; /* Reduced side padding */
    background: #212122;
    margin: 0;
    color: #eee;
  }

  .top-section {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
    gap: 20px;
    margin-bottom: 40px;
  }

  .cards-container {
    display: flex;
    gap: 20px;
    flex-wrap: nowrap;
    flex: 1 1 auto;
    min-width: 320px;
  }

  .card {
    background: #2e2f30;
    padding: 20px;
    border-radius: 16px;
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.5);
    width: 180px;
    height: 100px;
    color: #ccc;
    display: flex;
    justify-content: center;
    align-items: center;
    font-weight: 600;
    font-size: 1.1rem;
  }

  h2 {
    margin: 0 20px 0 0;
    font-size: 1.8rem;
    text-align: center;
    white-space: nowrap;
    flex-shrink: 0;
    color: #f0f0f0;
  }

  form {
    display: flex;
    justify-content: flex-start;
    flex-shrink: 0;
  }

  button {
    background-color: #330000;
    color: #ff0000;
    padding: 6px 20px 6px 32px;
    border: none;
    font-size: 0.9rem;
    border-radius: 30px;
    margin-top: 5px;
    margin-bottom: 10px;
    cursor: pointer;
    font-weight: bold;
    position: relative;
    box-shadow: none;
    transition: background-color 0.3s, transform 0.2s;
  }

  button::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 12px;
    transform: translateY(-50%);
    width: 8px;
    height: 8px;
    background-color: red;
    border-radius: 50%;
    animation: pulse 1.2s infinite ease-in-out;
  }

  @keyframes pulse {
    0%, 100% {
      transform: translateY(-50%) scale(1);
      opacity: 1;
    }
    50% {
      transform: translateY(-50%) scale(1.6);
      opacity: 0.5;
    }
  }

  button:hover {
    background-color: #440000;
    transform: scale(1.03);
  }

  .chart-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 15px; /* Reduced gap from 40px to 15px */
    justify-items: stretch;
    width: 98%; /* Take up more width */
    margin: 0 auto; /* Center the grid */
  }

  .chart-container {
    background: #2e2f30;
    padding: 10px !important;
    border-radius: 16px;
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.5);
    width: 100% !important;
    max-width: none !important;
    color: #ccc;
  }

  canvas {
    width: 100% !important;
    height: 360px !important;
    background: transparent;
  }

  .container {
    width: 97%; /* Increased from bootstrap default */
    max-width: 1800px; /* Allow more width on larger screens */
    padding-left: 5px; /* Minimum padding */
    padding-right: 5px; /* Minimum padding */
  }

  @media (max-width: 992px) {
    .top-section {
      flex-direction: column;
      align-items: flex-start;
      gap: 25px;
    }
    .cards-container {
      width: 100%;
      justify-content: space-between;
    }
    .chart-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 20px; /* Smaller gap on medium screens */
    }
    canvas {
      height: 320px !important;
    }

    @media (max-width: 576px) {
    
    .chart-grid {
      grid-template-columns: 1fr;
    }
    .chart-container canvas {
      height: 300px !important;
    }
  }
  }
</style>
</head>
<body>
<div class="container">
<div class="text-center mb-4">
  <h1 class="fw-bold mb-3" style="font-size: 3rem;"><img src="<%=imgUrl%>" class="img-thumbnail" alt="youtube-icon" style="margin-right: 10px;
  border-radius: 50%;"><%= id %></h1>
  <div class="d-inline-flex align-items-center gap-3">
    <form action="/livesub/<%=channel_id%>" method="get" style="margin: 0;">
      <button type="submit">View Live</button>
    </form>
    <a href="https://www.youtube.com/channel/<%=channel_id%>">
    <i class="fa-brands fa-youtube youtube-icon fs-2"></i>
    </a>
  </div>
</div>


<div class="row g-4">
  <div class="col-md-4">
    <div class="p-4 bg-dark text-white rounded shadow border border-light text-center">
      <h2 class="mb-1 fw-bold"><%=newTotalSubs[newTotalSubs.length-1]%>M</h2>
      <small class="card-desc">Total Subscribers</small>
    </div>
  </div>

  <div class="col-md-4">
    <div class="p-4 bg-dark text-white rounded shadow border border-light text-center">
      <h2 class="mb-1 fw-bold"><%= subLast30 %></h2>
      <small class="card-desc">Subscribers in Last 30 Days</small>
    </div>
  </div>

  <div class="col-md-4">
    <div class="p-4 bg-dark text-white rounded shadow border border-light text-center">
      <h2 class="mb-1 fw-bold"><%= viewsLast30 %></h2>
      <small class="card-desc">Views in Last 30 Days</small>
    </div>
  </div>

  <div class="col-md-4">
    <div class="p-4 bg-dark text-white rounded shadow border border-light text-center">
      <h2 class="mb-1 fw-bold"><%= monthEarningsEst %></h2>
      <small class="card-desc">Est. monthly Earnings</small>
    </div>
  </div>

  <div class="col-md-4">
    <div class="p-4 bg-dark text-white rounded shadow border border-light text-center">
      <h2 class="mb-1 fw-bold"><%= yearEarningsEst %></h2>
      <small class="card-desc">Est. yearly Earnings</small>
    </div>
  </div>

  <div class="col-md-4">
    <div class="p-4 bg-dark text-white rounded shadow border border-light text-center">
      <h2 class="mb-1 fw-bold"><%= subRank %></h2>
      <small class="card-desc">Subscriber Rank</small>
    </div>
  </div>
</div>


<style>
.youtube-icon {
  opacity: 0.6;
  transition: all 0.3s ease;
  cursor: pointer;
  color:white;
}

.youtube-icon:hover {
  opacity: 1;
  transform: scale(1.05);
  color: red;
}

.card-desc {
  display: block;
  margin-top: 6px;
  font-size: 0.85rem;
  color: rgba(255, 255, 255, 0.9);
  opacity: 0.9;
  font-weight: 500;
}
</style>


 <!-- <form action="/livesub/<%=channel_id%>" method="get">
     <button>View Live</button>
  </form> -->

<br>
  <div class="chart-grid">
    <div class="chart-container"><canvas id="lineChart1"></canvas></div>
    <div class="chart-container"><canvas id="lineChart2"></canvas></div>
    <div class="chart-container"><canvas id="lineChart3"></canvas></div>
    <div class="chart-container"><canvas id="lineChart4"></canvas></div>
    <div class="chart-container"><canvas id="barChart2"></canvas></div>
    <div class="chart-container"><canvas id="barChart3"></canvas></div>
    <div class="chart-container"><canvas id="areaChart"></canvas></div>
    <div class="chart-container"><canvas id="scatterChart1"></canvas></div>
    <div class="chart-container"><canvas id="dualAxisChart"></canvas></div>
  </div>
  <script>
    let Dates=<%-JSON.stringify(Dates)%>;
    let totalSubs=<%- JSON.stringify(newTotalSubs) %>;
    let totalViewsGained=<%- JSON.stringify(totalViewsGained) %>;
    let totalViews=<%- JSON.stringify(totalViews) %>;
    let videoInc=<%- JSON.stringify(videoInc) %>;
    let subInc=<%- JSON.stringify(subInc) %>;
    let earningsMax=<%- JSON.stringify(earningsMax) %>;
    let earningsMin=<%- JSON.stringify(earningsMin) %>;
    let totalVideos=<%- JSON.stringify(totalVideos) %>;
    function createLineChart(id, label, data, color) {
        new Chart(document.getElementById(id), {
          type: 'line',
          data: {
            labels: Dates,
            datasets: [{
              label: label,
              data: data,
              borderColor: color,
              fill: false,
              tension: 0.3
            }]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false
          }
        });
      }


      function createBarChart(id, label, data, color) {
      new Chart(document.getElementById(id), {
        type: 'bar',
        data: {
          labels: Dates,
          datasets: [{
            label: label,
            data: data,
            backgroundColor: color
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false
        }
      });
    }


      createLineChart("lineChart1", "Total Subscribers (M)", totalSubs , "#007bff"); 
      createLineChart("lineChart2", "Total Views", totalViews, "#28a745");
      createLineChart("lineChart3", "Views Increase", totalViewsGained, "#ffc107");
      createBarChart("barChart1", "Subscriber Increase", subInc, "#6f42c1");
      createBarChart("barChart2", "Estimated Earnings Min ($K)", earningsMin, "#fd7e14");
      createBarChart("barChart3", "Video Increase", videoInc, "#20c997");
       createLineChart("lineChart4", "Total Videos", totalVideos, "#17a2b8");
    new Chart(document.getElementById("areaChart"), {
      type: 'line',
      data: {
        labels: Dates,
        datasets: [
          {
            label: "Total Views",
            data: totalViews,
            borderColor: "#007bff",
            backgroundColor: "rgba(0,123,255,0.1)",
            fill: true,
            tension: 0.3
          },
          {
            label: "Total Videos",
            data: totalVideos,
            borderColor: "#28a745",
            backgroundColor: "rgba(40,167,69,0.1)",
            fill: true,
            tension: 0.3
          }
        ]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false
      }
    });

     new Chart(document.getElementById("scatterChart1"), {
      type: 'scatter',
      data: {
        datasets: [{
          label: "Views Increase vs Estimated Earnings (Avg $K)",
          data: totalViewsGained.map((v, i) => ({ x: v, y: (earningsMin[i] + earningsMax[i]) / 2 })),
          backgroundColor: "#dc3545"
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        scales: {
          x: { title: { display: true, text: 'Views Increase' }},
          y: { title: { display: true, text: 'Estimated Earnings ($K)' }}
        }
      }
    });
    

    new Chart(document.getElementById("dualAxisChart"), {
      type: 'line',
      data: {
        labels: Dates,
        datasets: [
          {
            label: "Views Increase",
            data: totalViewsGained,
            borderColor: "#007bff",
            yAxisID: 'y',
            tension: 0.3
          },
          {
            label: "Estimated Earnings Avg ($K)",
            data: earningsMin.map((min, i) => (min + earningsMax[i]) / 2),
            borderColor: "#fd7e14",
            yAxisID: 'y1',
            tension: 0.3
          }
        ]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        interaction: { mode: 'index', intersect: false },
        stacked: false,
        scales: {
          y: {
            type: 'linear',
            position: 'left',
            title: { display: true, text: 'Views Increase' }
          },
          y1: {
            type: 'linear',
            position: 'right',
            grid: { drawOnChartArea: false },
            title: { display: true, text: 'Estimated Earnings ($K)' }
          }
        }
      }
    });


  </script>
</div>
</body>
</html>
